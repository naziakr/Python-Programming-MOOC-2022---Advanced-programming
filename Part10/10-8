class SimpleDate:
    def __init__(self, day: int, month: int, year: int):
        self.__day = day
        self.__month = month
        self.__year = year
    
    def __str__(self):
        return f'{self.__day}.{self.__month}.{self.__year}'
    


    def __lt__(self, another: 'SimpleDate'):
        if self.__year < another.__year:
            return True
        elif self.__year == another.__year:
            if self.__month < another.__month:
                return True
            else:
                if self.__month == another.__month:
                    if self.__day < another.__day:
                        return True
        
        return False

    def __eq__(self, another: 'SimpleDate'):
        if self.__year == another.__year and self.__month == another.__month and self.__day == another.__day:
            return True
        else: return False
    
    def __gt__(self, another: 'SimpleDate'):
        if self. __lt__(another) == False and self.__eq__(another) == False:
            return True
        else: return False
    
    def __ne__(self, another: 'SimpleDate'):
        if self.__eq__(another) == False:
            return True
        else: return False
    
    def __days_to_year(self):
        return ((self.__year - 1)*12*30) + ((self.__month -1)*30) + (self.__day)

    def __add__(self, days_add):
        days = self.__days_to_year()
        days = days + days_add
        year = (days//360) + 1
        month  = ((days//30)%12) + 1
        day = days%30

        return (SimpleDate(day, month, year))

    def __sub__(self, another: 'SimpleDate'):
        curr_days = self.__days_to_year()
        another_days = another.__days_to_year()
        return abs(curr_days - another_days)
